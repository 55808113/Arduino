/*
* TetrisGame.h
* 俄罗斯方块类(通过Adafruit_SSD1306显示的)
* Created: 2019-5-30 23:05:39
*  Author: sunxdd
说明：接口分配如下
###SSD1306_TYPE################
NodeMcu的板：SCL(D1),SDA(D2)
ARDUINO的板：SCL(A5),SDA(A4)
MEGA 2560的板：SCL(21),SDA(20)
###LED8X8_TYPE################
使用的是SPI的接口。
MOSI=DIN=D11
SCK=CLK=D13
CS=D9
###NOKIA5110_TYPE################
RST=9
CE=10
DC=11
DIN=12
CLK=13
VCC=3.3V(这个要接3.3V。不要按5V因为会让屏幕显示太深了。)
BL=3.3V

使用例子
#include "TetrisGame.h"

void setup()
{
TetrisGame.init();
}
void loop()
{
TetrisGame.run();
}
*/


#ifndef _TETRISGAME_h
#define _TETRISGAME_h

#if defined(ARDUINO) && ARDUINO >= 100
#include "arduino.h"
#else
#include "WProgram.h"
#endif
//当屏幕为128X64的时候选择这个
//#define SSD1306_TYPE
//当屏幕为LED8X8的时候选择这个
//#define LED8X8_TYPE
//当屏幕为WS2812B5X20的时候选择这个
#define WS2812B_TYPE
//当屏幕为NOKIA5110的时候选择这个
//#define NOKIA5110_TYPE

#include "SX_Tetris.h"
#if defined(SSD1306_TYPE)
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
// 数据表 
const byte PROGMEM codeLogo[] =
{
	0xFF,0xF8,0xFE,0xFF,0xFF,0xFC,0x1F,0x81,0xF0,0x80,0x0B,0x02,0x80,0x0C,0x03,0x10,
	0x86,0x10,0x80,0x0A,0x02,0x80,0x0C,0x00,0x90,0x8C,0x10,0x80,0x0C,0x02,0x80,0x0C,
	0x00,0xD0,0x88,0x10,0x80,0x0C,0x02,0x80,0x0C,0x00,0x50,0x90,0x10,0xF0,0xFC,0x3E,
	0xF0,0xFC,0x38,0x50,0x90,0x30,0x10,0x84,0x02,0x10,0x84,0x28,0x50,0x90,0x40,0x10,
	0x84,0x02,0x10,0x84,0x38,0x50,0x90,0x20,0x10,0x84,0x02,0x10,0x84,0x20,0x90,0x90,
	0x20,0x10,0x84,0x02,0x10,0x84,0x20,0x90,0x88,0x10,0x10,0x84,0x02,0x10,0x84,0x21,
	0x10,0xA4,0x10,0x10,0x84,0x3E,0x10,0x84,0x20,0x90,0xB8,0x10,0x10,0x84,0x02,0x10,
	0x84,0x30,0x90,0xA0,0x10,0x10,0x84,0x02,0x10,0x84,0x30,0x50,0xA0,0x20,0x10,0x82,
	0x02,0x10,0x84,0x38,0x50,0xA0,0x60,0x10,0x83,0x02,0x10,0x84,0x28,0x50,0xA0,0xC0,
	0x1F,0x80,0xFE,0x1F,0x87,0xEF,0xFF,0x9F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x03,0x80,0xE0,0x00,0x00,0x50,0x00,0x3F,0x00,
	0x02,0x80,0xA0,0x00,0x00,0x70,0xFC,0x2D,0x00,0x03,0x80,0xE0,0x00,0x00,0x70,0xB4,
	0x3F,0x7F,0xFB,0xF0,0xE0,0x00,0x00,0x50,0xFC,0x3F,0x5B,0x6A,0xD0,0xA0,0x00,0x00,
	0x70,0x1F,0xAD,0x7F,0xFB,0xF0,0xE0,0x00,0x00,0x7E,0x16,0xBF,0x00,0x03,0x87,0xE0,
	0x00,0x00,0x5A,0x1F,0x80,0x00,0x02,0x85,0xA0,0x00,0x00,0x7E,0x00,0x00,0x00,0x03,
	0x87,0xE0,0x00/*"D:\无标题.bmp",0*/
};
#define IMG_WIDTH    68
#define IMG_HEIGHT   27
#define FONESIZE   10
//每个小方块的大小
#define SIGN_SIZE   3
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
//俄罗斯方块的显示的宽度
#define GAME_WIDTH 12 
//俄罗斯方块的显示的高度
#define GAME_HEIGHT 21 
#elif defined(LED8X8_TYPE)
#include <LEDMatrixDriver.hpp>
//CS为自己来设置如下变量就是设置的
#define LEDMATRIX_CS_PIN  9
//参数是设置有几个分屏的。如果是一个就设置为1.两个屏就设置2
#define LEDMATRIX_SEGMENTS  2
//参数是设置X为原点的位置。0为从左开始。1为从右开始
#define FLAGS  1
//俄罗斯方块的显示的宽度
#define GAME_WIDTH 10 
//俄罗斯方块的显示的高度
#define GAME_HEIGHT 18 
#elif defined(WS2812B_TYPE)
#include <Adafruit_GFX.h>
#include <Adafruit_NeoPixel.h>
#include <Adafruit_NeoMatrix.h>
//DIPin的端口
#define PIN            6
#define SCREEN_WIDTH 20 // OLED display width, in pixels
#define SCREEN_HEIGHT 5 // OLED display height, in pixels
//俄罗斯方块的显示的宽度
#define GAME_WIDTH SCREEN_HEIGHT+2 
//俄罗斯方块的显示的高度
#define GAME_HEIGHT SCREEN_WIDTH+2 
//亮度（0-255）
#define BRIGHTNESS 100
#elif defined(NOKIA5110_TYPE)
#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
// 数据表 
const byte PROGMEM codeLogo[] =
{
	0xFF,0xF8,0xFE,0xFF,0xFF,0xFC,0x1F,0x81,0xF0,0x80,0x0B,0x02,0x80,0x0C,0x03,0x10,
	0x86,0x10,0x80,0x0A,0x02,0x80,0x0C,0x00,0x90,0x8C,0x10,0x80,0x0C,0x02,0x80,0x0C,
	0x00,0xD0,0x88,0x10,0x80,0x0C,0x02,0x80,0x0C,0x00,0x50,0x90,0x10,0xF0,0xFC,0x3E,
	0xF0,0xFC,0x38,0x50,0x90,0x30,0x10,0x84,0x02,0x10,0x84,0x28,0x50,0x90,0x40,0x10,
	0x84,0x02,0x10,0x84,0x38,0x50,0x90,0x20,0x10,0x84,0x02,0x10,0x84,0x20,0x90,0x90,
	0x20,0x10,0x84,0x02,0x10,0x84,0x20,0x90,0x88,0x10,0x10,0x84,0x02,0x10,0x84,0x21,
	0x10,0xA4,0x10,0x10,0x84,0x3E,0x10,0x84,0x20,0x90,0xB8,0x10,0x10,0x84,0x02,0x10,
	0x84,0x30,0x90,0xA0,0x10,0x10,0x84,0x02,0x10,0x84,0x30,0x50,0xA0,0x20,0x10,0x82,
	0x02,0x10,0x84,0x38,0x50,0xA0,0x60,0x10,0x83,0x02,0x10,0x84,0x28,0x50,0xA0,0xC0,
	0x1F,0x80,0xFE,0x1F,0x87,0xEF,0xFF,0x9F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x03,0x80,0xE0,0x00,0x00,0x50,0x00,0x3F,0x00,
	0x02,0x80,0xA0,0x00,0x00,0x70,0xFC,0x2D,0x00,0x03,0x80,0xE0,0x00,0x00,0x70,0xB4,
	0x3F,0x7F,0xFB,0xF0,0xE0,0x00,0x00,0x50,0xFC,0x3F,0x5B,0x6A,0xD0,0xA0,0x00,0x00,
	0x70,0x1F,0xAD,0x7F,0xFB,0xF0,0xE0,0x00,0x00,0x7E,0x16,0xBF,0x00,0x03,0x87,0xE0,
	0x00,0x00,0x5A,0x1F,0x80,0x00,0x02,0x85,0xA0,0x00,0x00,0x7E,0x00,0x00,0x00,0x03,
	0x87,0xE0,0x00/*"D:\无标题.bmp",0*/
};
#define IMG_WIDTH    68
#define IMG_HEIGHT   27

#define RST_PIN		9
#define CE_PIN		10
#define DC_PIN		11
#define DIN_PIN		12
#define CLK_PIN		13
#define SIGN_SIZE   3
#define SCREEN_WIDTH 80 // OLED display width, in pixels
#define SCREEN_HEIGHT 50 // OLED display height, in pixels
//俄罗斯方块的显示的宽度
#define GAME_WIDTH 12
//俄罗斯方块的显示的高度
#define GAME_HEIGHT 16 
#endif


class TetrisGameClass :public SX_TetrisClass
{
protected:
	//实现父类的虚方法
	bool drawLogo();
	void drawBoard();
	void drawSign(int x, int y, bool drawColor, struct Color color = { 255,0,0 });
	void drawNewSign(int x, int y, bool drawColor, struct Color color = { 255,0,0 });
	void drawGameWin(byte score, byte level, bool drawColor = true);
	void drawGameOver();
public:
	TetrisGameClass(byte width = GAME_WIDTH, byte height = GAME_HEIGHT);
	void init();
	void run();
private:
	//logo信息闪烁
	boolean _logoMsgBlink = true;
	//为了XY的坐标变化
	void _changeXY(int x, int y, int *n, int *m);
	//得到按键值
	//String getKey();


};

extern TetrisGameClass TetrisGame;

#endif
